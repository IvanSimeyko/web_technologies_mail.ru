РЕЛЯЦИОННЫЕ БАЗЫ ДАННЫХ
Задачи - хранение и обработка данных.
Решаемые проблемы:
- структура хранения (таблица)
- эффективный поиск по данным
- управление памятью
- совместный доступ к данным
- атомарные операции - транзакции (независимость операций отдельных пользователей)
- язык управления базой и данными - SQL

Данные храняться в виде таблиц, имеющих фиксированное колличество столбцов. Тип данных в одном столбце одинаковый. Таблицы еще называют relation (отношения), колонку называют атрибутом, строка - кортежем. в строках можгут храниться данные различных типов.
Forein key (внешние ключи) - записи в разных таблицах могут ссылаться друг на друга.

ПРОЕКТИРОВАНИЕ БАЗЫ ДАННЫХ
Основная задача проектирования - сокращение избыточности и дублирования данных.
Правила проверки схемы б.д. (они определены матиматически) называют нормальные формы. Это теория.
Проектирование на практике:
- логическое разделение сущностей - делим всегда на более мелкие типы;
- выделение синтетических первычных ключей. Первичный ключ - число, которое уникально идентифицирует запись внутри таблицы.  
- связи 1:N, N:1 реализуются через внешний ключ;
- связи N:M реализуются через промежуточную таблицу;
- атрибут с фиксированным числом значений - внешняя таблица либо поле типа enum.

БАЗЫ ДАННЫХ В PYTHON



  
